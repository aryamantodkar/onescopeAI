services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: onescopeAI
    restart: always
    ports:
      - "3000:3000"
    env_file: .env
    depends_on:
      - db
      - clickhouse
    environment:
      DATABASE_URL: postgresql://user:password@db:5432/mydb
      CLICKHOUSE_URL: http://clickhouse:8123
      NEXT_PUBLIC_API_URL: http://web:3000
    # REMOVE volumes in production
    volumes:
      - .:/app
      - /app/node_modules
    command: ["pnpm", "dev", "-H", "0.0.0.0"]
  db:
    build:
      context: .
      dockerfile: Dockerfile.postgres
    container_name: postgres_db
    restart: always
    env_file: .env
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d

  # ClickHouse service
  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhouse_db
    restart: always
    env_file: .env
    environment:
      CLICKHOUSE_DB: analytics
      CLICKHOUSE_USER: default
      CLICKHOUSE_PASSWORD: password
    ports:
      - "9000:9000"
      - "8123:8123"
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./clickhouse-init/:/docker-entrypoint-initdb.d/

  cron-worker:
    container_name: cron_worker
    build:
      context: .
      dockerfile: Dockerfile.worker
    depends_on:
      - db
      - clickhouse
    env_file: .env
    environment:
      DATABASE_URL: postgresql://user:password@db:5432/mydb

volumes:
  db_data:
  clickhouse_data: